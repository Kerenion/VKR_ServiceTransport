@page "/counter"

@using Microsoft.EntityFrameworkCore
@using VKR_ServiceTransport.Domain.Entities
@using VKR_ServiceTransport.Ef.Persistance
@using VKR_ServiceTransport.Data

@inject IDbContextFactory<VKR_ServiceTransportContext> ContextFactory
@inject TransportService transportService
@inject NavigationManager Navigation

<PageTitle>Книга ТО</PageTitle>

<style>
    .table {
        width: 100%;
        border: none;
        margin-bottom: 20px;
        border-collapse: separate;
    }

        .table thead th {
            font-weight: bold;
            text-align: left;
            border: none;
            padding: 10px 15px;
            background: #EDEDED;
            font-size: 14px;
            border-top: 1px solid #ddd;
        }

        .table tr th:first-child, .table tr td:first-child {
            border-left: 1px solid #ddd;
        }

        .table tr th:last-child, .table tr td:last-child {
            border-right: 1px solid #ddd;
        }

        .table thead tr th:first-child {
            border-radius: 20px 0 0 0;
        }

        .table thead tr th:last-child {
            border-radius: 0 20px 0 0;
        }

        .table tbody td {
            text-align: left;
            border: none;
            padding: 10px 15px;
            font-size: 14px;
            vertical-align: top;
        }

        .table tbody tr:nth-child(even) {
            background: #F8F8F8;
        }

        .table tbody tr:last-child td {
            border-bottom: 1px solid #ddd;
        }

            .table tbody tr:last-child td:first-child {
                border-radius: 0 0 0 20px;
            }

            .table tbody tr:last-child td:last-child {
                border-radius: 0 0 20px 0;
            }
</style>

<style>
    td {
        border: 2px solid;
        text-align: center;
        padding: .5rem .25rem;
    }

    .table-repairs td {
        font-weight: bolder;
    }

    .add-repairs-button{
        position: absolute;
        bottom: 50px;
        right: 50px;
        color: #fff;
        background-color: #1b6ec2;
        border-color: #1861ac;
        display: inline-block;
        font-weight: 400;
        line-height: 1.5;
        text-align: center;
        text-decoration: none;
        vertical-align: middle;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
        border: 1px solid transparent;
        padding: .375rem .75rem;
        font-size: 1rem;
        border-radius: .25rem;
        transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }

    .btn {
        padding: 1px 6px;
        font-size: 14px;
    }

</style>

<b>Книга ТО</b>

<table class="table">

    <thead>
        <tr class="table-repairs">
            <th>Что было сделано</th>
            <th>Пробег, когда было сделано</th>
            <th>Дата</th>
            <th>Стоимость запчасти</th>
            <th>Стоимость работы</th>
            <th>Итого</th>
            <th>Артикулы деталей</th>
            <th>Редактировать</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var repair in repairs)
        {
            <tr>
                <td>@repair.WhatWasDone</td>
                <td>@repair.CurrentMileage</td>
                <td>@repair.Date</td>
                <td>@repair.CostSparePart</td>
                <td>@repair.CostWork</td>
                <td>@repair.CostTotal</td>
                <td>@repair.PartNumbers</td>
                <td><button class="btn btn-primary" @onclick="() => WriteThisRepair(repair)">Редактировать</button></td>
            </tr>
        }
    </tbody>

</table>

<button class="add-repairs-button" @onclick="AddRepair">Добавить</button>

@code {
    Transport transport;
    List<Repair> repairs;

    protected async override Task OnInitializedAsync()
    {
        await using var context = ContextFactory.CreateDbContext();

        transport = transportService.currentTransport;
        repairs = transport.Repairs;

        repairs = repairs.OrderByDescending(repair => repair.Date).ToList();
    }

    private void WriteThisRepair(Repair repair)
    {
        transportService.Repair = repair;
        Navigation.NavigateTo("/editRepair", true);
    }

    public void AddRepair()
    {
        Navigation.NavigateTo("/addRepair", true);
    }
}
